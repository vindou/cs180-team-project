import java.io.*;
import java.util.ArrayList;

public class ConversationDatabase implements Database {
    // conversationArray: An ArrayList that stores every single
    // conversation that has been created on the social media
    // platform.
    private ArrayList<Conversation> conversationArray;

    // filePath: A String variable describing where the
    // Conversation data should be written to.
    private String filePath;

    // f: File object generated by filePath
    private File f;

    // Main Constructor
    public ConversationDatabase(ArrayList<Conversation> conversationArray
                                , String filePath) {
        this.conversationArray = conversationArray;
        this.filePath = filePath;
        this.f = new File(filePath);
    }

    // Returns an Array of all Conversations that have been
    // ever made on the app.
    public ArrayList<Conversation> getConversationArray() {
        return this.conversationArray;
    }

    public ArrayList<Object> readDatabase() {
        try {
            // open file
            // use ois to access each object
            // add it to the array

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Returns the conversations that a user is involved in.
    public ArrayList<Conversation> findAvailableConversations(User user) {
        ArrayList<Conversation> availableConversations = new ArrayList<Conversation>();

        for (Conversation conversation : this.conversationArray) {
            for (User involvedUser : conversation.getUsers()) {
                if (involvedUser.equals(user)) {
                    availableConversations.add(conversation);
                }
            }
        }
        return availableConversations;
    }

    // Writes all the conversation file names to a single file
    // returns true or false depending on completion.
    public boolean writeDatabase() {
       boolean completion = true;
       try {
           FileOutputStream fos = new FileOutputStream(this.f, false);
           ObjectOutputStream oos = new ObjectOutputStream(fos);

           for (Conversation conversation : conversationArray) {
               oos.writeObject(conversation);
           }
           oos.close();
       } catch (Exception e) {
           completion = false;
       }

       return completion;
    }

    public boolean writeMessageLogs(Conversation conversation) {
        boolean completion = true;
        File f = new File(conversation.getID() + ".txt");
        try {
            FileOutputStream fos = new FileOutputStream(f, false);
            ObjectOutputStream oos = new ObjectOutputStream(fos);

            oos.writeObject(conversation);
            oos.close();
        } catch (Exception e) {
            completion = false;
        }
        return completion;
    }

    // Retrieves and returns the data for a conversation given a
    // file name.
    public Conversation retrieveData(String conversationFileName) {
        return new Conversation();
    }

}
